---
# PLUGINS
# -------

# Startup
# -------
- repo: rhysd/accelerated-jk
  hook_add: let g:accelerated_jk_acceleration_limit = 10

- repo: Shougo/dein.vim
- repo: haya14busa/dein-command.vim
- repo: dstein64/vim-startuptime
- repo: mhinz/vim-startify
- repo: editorconfig/editorconfig-vim
- repo: liuchengxu/vim-which-key
- repo: justinmk/vim-dirvish
- repo: jiangmiao/auto-pairs
  hook_add: |
    let g:AutoPairsFlyMode = 0
    let g:AutoPairsMultilineClose = 0
  hook_source: |
    augroup vime_auto_paris_group
        autocmd!
        au FileType php  let b:AutoPairs = AutoPairsDefine({'<?' : '?>', '<?php': '?>'})
        au FileType rust let b:AutoPairs = AutoPairsDefine({'\w\zs<': '>'})
        au FileType html let b:AutoPairs = AutoPairsDefine({'<!--' : '-->'}, ['{'])
        au FileType md   let b:AutoPairs = AutoPairsDefine({'```:```'})
    augroup END


- repo: norcalli/nvim-colorizer.lua
  on_event: FileType
  hook_source: luafile $VIM_PATH/config/plugins/colorizer.lua

# Languages
# ---------
- repo: neoclide/jsonc.vim
- repo: vim-jp/syntax-vim-ex
- repo: zinit-zsh/zinit-vim-syntax
- repo: euclidianAce/BetterLua.vim
- repo: tjdevries/nlua.nvim

# TypeScript & JavaScript
- repo: leafgarland/typescript-vim
- repo: peitalin/vim-jsx-typescript

# Markdown related
- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_add: |
    let g:vim_markdown_math = 1
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_strikethrough = 1
    let g:vim_markdown_folding_level = 6
    let g:vim_markdown_override_foldtext = 1
    let g:vim_markdown_folding_style_pythonic = 1
    let g:vim_markdown_conceal = 0
    let g:vim_markdown_conceal_code_blocks = 0
    let g:vim_markdown_edit_url_in = 'vsplit'
    let g:vim_markdown_follow_anchor = 1
    let g:vim_markdown_auto_insert_bullets = 0
    let g:vim_markdown_new_list_item_indent = 2
    let g:vim_markdown_toc_autofit = 0
    let g:vim_markdown_fenced_languages = [
      \ 'c++=cpp',
      \ 'viml=vim',
      \ 'bash=sh',
      \ 'ini=dosini',
      \ 'js=javascript',
      \ 'json=javascript',
      \ 'jsx=javascriptreact',
      \ 'tsx=typescriptreact',
      \ 'docker=Dockerfile',
      \ 'makefile=make',
      \ 'py=python'
      \ ]

- repo: rhysd/vim-gfm-syntax
  depends: vim-markdown
  on_ft: markdown
  hook_add: |
    let g:gfm_syntax_enable_always = 0
    let g:gfm_syntax_highlight_emoji = 0
    let g:gfm_syntax_enable_filetypes = ['markdown']

- repo: iamcco/markdown-preview.nvim
  on_ft: [markdown,pandoc.markdown,rmd]
  hook_source: let g:mkdp_auto_start = 0
  hook_post_source: 'call mkdp#util#install()'
  hook_add: |
    let g:mkdp_preview_options = {
      \ 'mkit': {'linkify': v:true, 'typographer': v:true},
      \ 'katex': {},
      \ 'uml': {},
      \ 'maid': {},
      \ 'disable_sync_scroll': 0,
      \ 'sync_scroll_type': 'middle',
      \ 'hide_yaml_meta': 1,
      \ 'sequence_diagrams': {},
      \ 'flowchart_diagrams': {}
      \ }

# PHP
- repo: StanAngeloff/php.vim
  hook_source: |
    let php_var_selector_is_identifier = 1
    let php_html_load = 0

- repo: stephpy/vim-php-cs-fixer
  hook_add: |
    let g:php_cs_fixer_path = "php-cs-fixer"
    let g:php_cs_fixer_rules = "@PSR2"

- repo: janko-m/vim-test
  on_ft: php
  hook_add: let test#strategy = 'asyncrun'


# 80% of all other languages
- repo: sheerun/vim-polyglot
  hook_add: let g:polyglot_disabled = ['php', 'vim', 'typescript', 'markdown']

# Documentor
- repo: kkoomen/vim-doge
  on_ft: [php, javascript, typescript, typescriptreact, python]
  hook_add: |
    let g:doge_mapping_comment_jump_forward = '<c-j>'
    let g:doge_mapping_comment_jump_backward = '<c-k>'


# Git
# --------
- repo: airblade/vim-gitgutter
- {repo: jreybert/vimagit, on_cmd: [Magit, MagitOnly]}
- {repo: hotwatermorning/auto-git-diff, on_ft: gitrebase}
- {repo: tpope/vim-fugitive, cmd: [Gpull, Gpush, Gstatus]}


# Commands
# --------
- repo: kamykn/popup-menu.nvim

- repo: kamykn/spelunker.vim
  hook_add: |
    let g:enable_spelunker_vim = 1
    let g:spelunker_max_suggest_words = 15

- repo: AndrewRadev/switch.vim
- repo: arthurxavierx/vim-caser
  hook_add: let g:caser_prefix = '<Space>cc'
- repo: junegunn/vim-easy-align
- repo: tpope/vim-repeat
- repo: tpope/vim-commentary

- repo: mbbill/undotree
  on_cmd: UndotreeToggle
  hook_source: |
    let g:undotree_DiffAutoOpen = v:false
    let g:undotree_DiffpanelHeight = 10
    let g:undotree_DiffCommand = 'diff'
    let g:undotree_HelpLine = v:false
    let g:undotree_HighlightChangedText = 1
    let g:undotree_HighlightSyntaxAdd = 'DiffAdd'
    let g:undotree_HighlightSyntaxChange = 'DiffChange'
    let g:undotree_HighlightSyntaxDel = 'DiffDelete'
    let g:undotree_RelativeTimestamp = 1
    let g:undotree_SetFocusWhenToggle = 1
    let g:undotree_SplitWidth = 35
    let g:undotree_TreeNodeShape = '*'
    let g:undotree_WindowLayout= 3

- repo: voldikss/vim-floaterm

- repo: MattesGroeger/vim-bookmarks
  on_path: .*
  hook_source: |
    let g:bookmark_auto_save_file = $DATA_PATH . '/bookmarks'
    let g:bookmark_no_default_key_mappings = 1
    let g:bookmark_disable_ctrlp = 1
    let g:bookmark_location_list = 1
    let g:bookmark_sign = '⚐'

- repo: Vigemus/iron.nvim
  if: has('nvim')
  on_cmd: [ IronRepl, IronReplHere, IronFocus, IronSend, IronWatchCurrentFile ]
  on_map: { nv: <Plug> }
  on_func: IronUnwatchFile
  hook_add: let g:iron_map_defaults = 0 | let g:iron_map_extended = 0
  hook_source: luafile $VIM_PATH/config/plugins/iron.lua

- repo: liuchengxu/vista.vim
  on_cmd: Vista
  hook_add: |
    let g:vista#renderer#enable_icon = 1
    let g:vista_default_executive = 'ctags'
    let g:vista_echo_cursor = 0
    let g:vista_echo_cursor_strategy = 'echo'
    let g:vista_icon_indent = [" ", " "]
    let g:vista_sidebar_width = 30
    let g:vista_vimwiki_executive = 'markdown'
    let g:vista_executive_for = {
      \ 'markdown': 'toc',
      \ 'pandoc': 'markdown',
      \ 'vimwiki': 'markdown',
      \ 'wiki': 'markdown',
      \ 'javascript': 'coc',
      \ 'javascriptreact': 'coc',
      \ 'python': 'coc',
      \ 'typescript': 'coc',
      \ 'typescriptreact': 'coc',
      \ 'jsx': 'coc',
      \}
      let g:vista#renderer#icons = {
        \ "function": "\uf794",
        \ "variable": "\uf71b",
        \}

- repo: mzlogin/vim-markdown-toc
  on_cmd: [ GenTocGFM, GenTocRedcarpet, GenTocGitLab, UpdateToc ]
  hook_add: let g:vmt_auto_update_on_save = 0

- repo: itchyny/calendar.vim
  on_cmd: Calendar
  hook_source: |
    let g:calendar_google_calendar = 1
    let g:calendar_google_task = 1

- repo: vimwiki/vimwiki
  on_map: { n: <Plug> }
  on_cmd: [ VimwikiIndex, VimwikiUISelect ]
  hook_add: |
    let g:calendar_frame = 'default'
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
  hook_source: |
    let g:vimwiki_ext2syntax = {
      \ '.md':        'markdown',
      \ '.Rmd':       'markdown',
      \ '.rmd':       'markdown',
      \ '.mdown':     'markdown',
      \ '.markdown':  'markdown',
      \ }
      let g:vimwiki_list = [{
        \		'path': '~/Documents/vimwiki',
        \		'syntax': 'markdown', 'ext': '.md'
        \ }]

- repo: tpope/vim-dadbod

- repo: kristijanhusak/vim-dadbod-ui
  on_cmd: [ DBUIToggle,DBUIAddConnection,DBUI,DBUIFindBuffer,DBUIRenameBuffer ]
  on_source: vim-dadbod
  hook_source: |
    let g:db_ui_show_help = 0
    let g:db_ui_win_position = 'right'
    let g:db_ui_execute_on_save    = 0
    let g:db_ui_show_database_icon = 1
    let g:db_ui_use_nerd_fonts = 1
    let g:db_ui_winwidth = 35
    let g:db_ui_save_location = $DATA_PATH . '/db_ui_queries'

- repo: skywind3000/asyncrun.vim
- {repo: tpope/vim-dispatch, on_cmd: [Dispatch, Make, Focus, Start]}


# Interface
# ---------
- {repo: haya14busa/vim-asterisk, on_map: { nv: <Plug> }}
- {repo: haya14busa/is.vim, on_map: { nv: <Plug> }}
- {repo: haya14busa/vim-edgemotion, on_map: { nv: <Plug> }}
- {repo: rhysd/clever-f.vim, hook_add: let g:clever_f_fix_key_direction = 1}

- repo: osyo-manga/vim-anzu
  on_map: { nv: <Plug> }
  hook_add: let g:anzu_status_format = "%p(%i/%l) %w"

- repo: rhysd/committia.vim
  on_path: COMMIT_EDITMSG
  hook_source: let g:committia_min_window_width = 70

- repo: andymass/vim-matchup
  hook_add: |
    let g:matchup_matchparen_deferred = 1
    let g:matchup_matchparen_deferred_show_delay = 100
    let g:matchup_matchparen_hi_surround_always = 1
    let g:matchup_override_vimtex = 1
    let g:matchup_delim_start_plaintext = 0
    let g:matchup_transmute_enabled = 0

- repo: easymotion/vim-easymotion
  on_map: { n: <Plug> }
  hook_source: |
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_use_upper = 1
    let g:EasyMotion_prompt = 'Jump to → '
    let g:EasyMotion_keys = 'fjdksweoavn'
    let g:EasyMotion_smartcase = 1


- repo: luochen1990/rainbow
  on_ft: [php, python, html, css, vim, json, jsonc, yaml, typescript, typescriptreact, javascript, javascriptreact]
  hook_source: |
    let g:rainbow_active = 1
    let g:rainbow_conf = {
    \   'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'],
    \   'ctermfgs': ['lightyellow', 'lightcyan','lightblue', 'lightmagenta'],
    \   'operators': '_,_',
    \   'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
    \   'separately': {
    \       '*': {},
    \       'tex': {
    \           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
    \       },
    \       'lisp': {
    \           'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'],
    \       },
    \       'vim': {
    \           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
    \       },
    \       'html': {
    \           'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
    \       },
    \       'css': 0,
    \   }
    \}

- repo: Yggdroot/indentLine
  on_cmd: [IndentLinesToggle ]
  on_ft: [python, html, css, vim, typescript, typescriptreact, javascript, javascriptreact, vue]
  hook_source: |
    let g:indentLine_color_term = 239
    let g:indentLine_leadingSpaceEanbled = 1
    let g:indentLine_enabled = 1
    let g:indentLine_char = '│'
    let g:indentLine_char='┆'
    let g:indentLine_faster = 1
    let g:indentLine_showFirstIndentLevel = 0
    let g:indentLine_setColors = 1
    let g:indentLine_concealcursor = 'inc'
    let g:indentLine_conceallevel = 2
    let g:indentLine_color_gui= '#725972'
    let g:indentLine_bufTypeExclude = ["help", "quickfix", "terminal", "prompt", "nofile"]
    let g:indentLine_fileTypeExclude = [
      \ 'terminal',
      \ 'defx',
      \ 'startify',
      \ 'terminal',
      \ 'coc-explorer',
      \ 'json',
      \ 'jsonc',
      \ 'vista',
      \ 'vista_kind',
      \ 'help',
      \ 'nerdtree',
      \ 'tagbar',
      \ 'vimfiler',
      \ 'markdown',
      \ 'minimap',
      \ 'dashboard',
      \ 'tex',
      \ 'vimwiki',
      \ 'man',
      \ 'vista_markdown',
      \]

- repo: psliwka/vim-smoothie
  on_func: smoothie#
  hook_add: |
    let g:smoothie_no_default_mappings = v:true

# Completions & code analysis
# ---------------------------
- repo: neoclide/coc.nvim
  merge: 0
  build: yarn install --frozen-lockfile
  hook_add: source $VIM_PATH/config/plugins/coc.vim

- repo: antoinemadec/coc-fzf

- {repo: junegunn/fzf, build: ./install --all}
- repo: junegunn/fzf.vim
- repo: Tarmean/fzf-session.vim
- repo: tpope/vim-obsession
- repo: gelguy/wilder.nvim
  hook_source: call wilder#enable_cmdline_enter()
  hook_add: source $VIM_PATH/config/plugins/wilder.vim

- repo: Shougo/echodoc.vim
  on_event: CompleteDone
  hook_source: call echodoc#enable()

# - repo: phpactor/phpactor
#   on_ft: php
#   build: 'composer install --no-dev -o'


# Tabline & Bufferline
# --------------------
- repo: itchyny/lightline.vim

- repo: shinchu/lightline-gruvbox.vim
  depends: ligntline.vim

- repo: josa42/vim-lightline-coc
  depends: ligntline.vim

- {repo: cocopon/lightline-hybrid.vim, depends: lightline.vim}
- {repo: mengelbrecht/lightline-bufferline, depends: lightline.vim}


# Operators & Text Objects
# ------------------------
- repo: kana/vim-operator-user

- repo: kana/vim-operator-replace
  on_map: { vnx: <Plug> }

- repo: machakann/vim-sandwich
  on_map: { vonx: <Plug>(operator-sandwich- }
  hook_add: |
    let g:sandwich_no_default_key_mappings = 1
    let g:operator_sandwich_no_default_key_mappings = 1
    let g:textobj_sandwich_no_default_key_mappings = 1

- repo: kana/vim-textobj-user
- repo: wellle/targets.vim
- repo: machakann/vim-textobj-delimited
- repo: thinca/vim-textobj-between

- repo: AndrewRadev/splitjoin.vim
  on_map: { n: <Plug>Splitjoin }
  hook_add: let g:splitjoin_php_method_chain_full = 1

- repo: AndrewRadev/dsf.vim
  on_map: { n: <Plug>Dsf }
  hook_add: let g:dsf_no_mappings = 1

- repo: osyo-manga/vim-textobj-multiblock
  depends: vim-textobj-user
  on_map: { ox: <Plug> }
  hook_add: let g:textobj_multiblock_no_default_key_mappings = 1

- {repo: terryma/vim-expand-region, on_map: { x: <Plug> }}
- {repo: AndrewRadev/sideways.vim, on_map: { onx: <Plug>Sideways }}


# Better writing/coding focus
# --------------------------
- repo: junegunn/goyo.vim
  depends: limelight.vim
  on_cmd: Goyo
  hook_source: source $VIM_PATH/config/plugins/goyo.vim

- repo: junegunn/limelight.vim
  on_cmd: Limelight
  hook_add: |
    let g:limelight_conceal_ctermfg = 'gray'
    let g:limelight_conceal_ctermfg = '240'
    let g:limelight_conceal_guifg = 'DarkGray'
    let g:limelight_conceal_guifg = '#777777'

- repo: reedes/vim-textobj-sentence
- repo: reedes/vim-textobj-quote
- repo: reedes/vim-wordchipper
- repo: tpope/vim-abolish
- repo: rhysd/vim-grammarous

# Colorschemes
# ------------
- repo: logico/typewriter-vim
- repo: tomasiser/vim-code-dark
- repo: Rigellute/shades-of-purple.vim
- repo: gruvbox-community/gruvbox
  hook_add: |
    let g:gruvbox_italic = 1
    let g:gruvbox_filetype_hi_groups = 1
    let g:gruvbox_plugin_hi_groups = 1
    let g:gruvbox_transp_bg = 1
    let g:gruvbox_contrast_dark = 'soft'
    let g:gruvbox_contrast_light = 'hard'
    let g:gruvbox_invert_indent_guides = 1

- repo: arcticicestudio/nord-vim
  hook_add: |
    let g:nord_italic_comments = 1
    let g:nord_bold = 1
    let g:nord_italic = 1
    let g:nord_uniform_diff_background = 1
    let g:nord_bold_vertical_split_line = 1

- repo: joshdick/onedark.vim
  hook_add: |
    let g:onedark_terminal_italics = 1
    let g:onedark_hide_endofbuffer = 1

- repo: junegunn/seoul256.vim
  hook_add: |
    let g:seoul256_background = 233
    let g:seoul256_light_background = 256

- repo: lifepillar/vim-solarized8
  hook_add: let g:solarized_visibility = 'high'

- repo: mhartington/oceanic-next
  hook_add: |
    let g:oceanic_next_terminal_bold = 1
    let g:oceanic_next_terminal_italic = 1


- repo: nanotech/jellybeans.vim
  hook_add: let g:jellybeans_use_term_italics = 1

- repo: rafi/awesome-vim-colorschemes
  hook_add: let g:one_allow_italics = 1

# Icons
# -----
- repo: ryanoasis/vim-devicons
  hook_add: |
    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {
        \ '.gitlab-ci.yml': '',
        \ '.prettierrc': '',
        \ '.gitignore': '',
        \ 'gitconfig': '',
        \ 'gitignore_global': '',
        \ '.gitattributes': '',
        \ '.gitmodules': '',
        \ 'yarn.lock': '',
        \ '.dockerignore': '',
        \ '.babelrc': '',
        \ '.editorconfig': '',
        \ 'package.json': '',
        \ }
      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {
        \ 'docker-compose.*\.yml$': '',
        \ '\.env': '',
        \ '^dockerfile': '',
        \ 'vimrc': '',
        \ 'zlogin': '',
        \ 'zlogout': '',
        \ 'zpreztorc': '',
        \ 'zprofile': '',
        \ 'zshenv': '',
        \ 'zshrc': '',
        \ '\.?profile$': '',
        \ 'bash_profile': '',
        \ }

  #  vim: set foldmethod=marker ts=2 sw=2 tw=80 et :

